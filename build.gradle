plugins {
    id "jacoco"
    id "java"
    id "application"
    id "org.sonarqube" version "4.4.1.3373"
    id 'org.springframework.boot' version '3.1.4'
    id "io.spring.dependency-management" version '1.1.3'
    id "org.springdoc.openapi-gradle-plugin" version "1.8.0"
}

group = 'br.com.cezarcruz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' //temp

    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.instancio:instancio-junit:3.4.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    //containers
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:junit-jupiter'

}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "cezarcruz_java-bank"
        property "sonar.organization", "cezarcruz"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.exclusions", "**/core/config/**,**KafkaErrorHandler.java,**/*Wrapper.java"
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}